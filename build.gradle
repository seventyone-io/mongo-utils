plugins {
    id 'com.github.hierynomus.license' version '0.11.0'
    id 'com.jfrog.bintray' version '1.3.1'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

description = 'Mongo Utilities'
group = 'io.seventyone'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    jcenter {
        url 'http://jcenter.bintray.com/'
    }
}

dependencies {

    compile 'org.mongodb:mongo-java-driver:3.1.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'
    compile 'org.reflections:reflections:0.9.10'

    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.google.collections:google-collections:1.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

def modifyPom = { xmlProvider ->
     def plugins = xmlProvider.asNode().appendNode('build').appendNode('plugins')
    def mavenCompilerPlugin = plugins.appendNode('plugin')
    mavenCompilerPlugin.appendNode('artifactId').value = 'maven-compiler-plugin'
    mavenCompilerPlugin.appendNode('version').value = '3.1'
    def mavenCompilerPluginConfiguration = mavenCompilerPlugin.appendNode('configuration')
    mavenCompilerPluginConfiguration.appendNode('source').value = sourceCompatibility
    mavenCompilerPluginConfiguration.appendNode('target').value = targetCompatibility

    def depMap = configurations.compile.dependencies.collectEntries { [it.name, it] }
    xmlProvider.asNode().dependencies.dependency.findAll {
        def dep = depMap.get(it.artifactId.text())
        return dep?.hasProperty('optional') && dep.optional
    }.each {
        if (it.optional) {
            it.optional.value = 'true'
        } else {
            it.appendNode('optional', 'true')
        }
    }
}

task pom << {
    pom {
        packaging = 'jar'
        project {
            properties {
                'project.build.sourceEncoding' 'UTF-8'
            }
        }
    }.withXml { xmlProvider ->
        modifyPom(xmlProvider)
    }.writeTo("pom.xml")
}

license {
    header = project.file('LICENSE-Header')

    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'SEVENTYONE.io - Benjamin Weidig'
    ext.email = 'github+mongo-utils@seventyone.io'
}

bintray {
    user = project.property('bintrayUser')
    key = project.property('bintrayKey')
    publications = ['MongoUtilsPublication']

    pkg {
        repo = 'utilities'
        name = 'mongo-utils'
        userOrg = 'seventyone-io'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/seventyone-io/mongo-utils.git'
    }
}

publishing {
    publications {
        MongoUtilsPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
}
